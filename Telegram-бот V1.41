from telebot import TeleBot
from telebot import types
import random
from random import choice
from variables import *
from test_Keplerians import *
import xml.etree.ElementTree as ET
token = ''
bot = TeleBot(token)

chat_global_file = open("chat.txt", "r")
chat_global = set()
for line in chat_global_file:
    chat_global.add(line.strip())
chat_global_file.close()

def staet():
    bot.send_message(chat, "Бот успешно запущен!")

if __name__ == "__main__":
    staet()

@bot.message_handler(commands=["admin"])
def adminka(message):
	ne_chat_id = str(message.chat.id)
	markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
	but = types.KeyboardButton(stop)
	markup.add(but)
	markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
	but1 = types.KeyboardButton("/start")
	markup1.add(but1)
	if ne_chat_id == chat:
		send = bot.send_message(chat, "Введите сообщение для публикации в [Telegram-канал](https://t.me/kontrol_chek185)", parse_mode="Markdown", reply_markup=markup)
		bot.register_next_step_handler(send, adminka1)
	elif ne_chat_id != chat:
		bot.send_message(ne_chat_id, "Извините, команда вам не доступна!", reply_markup=markup1)

def adminka1(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but = types.KeyboardButton("/start")
    markup.add(but)
    text = message.text
    if message.content_type == "text" and message.text != stop:
        bot.send_message(chat, "Сообщение успешно отправлено!", reply_markup=markup)
        bot.send_message(kanal, text, parse_mode="Markdown")
    elif message.text == stop:
        bot.send_message(chat, "Вы отказались от публикаций в канал!", reply_markup=markup)

@bot.message_handler(commands=['start'])
def komand(message):
    black_list = open("black_list.txt", "r", encoding="UTF-8")
    black_l = black_list.read()
    if not str(message.chat.id) in black_l:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        but5 = '/idea'
        but6 = '/test'
        but7 = '/beta_kmn'
        but8 = '/beta_randomaizer'
        markup.add(but5, but6, but7, but8)
        bot.send_message(message.chat.id, """Привет! С тобой Саня, ты в моем боте! Выбери одну из команд ниже:\n/idea - Можно подкинуть мне идею для видео!(P.S. все идеи будут приходить мне, так что не надо писать всякую фигню!)\n/test - Можно пройти тест по играм Keplerians!\n/beta_kmn - игра "Камень, ножницы, бумага"! Можно играть как одному, так и с друзьями!\n/beta_randomaizer - Рандомайзер! Доступен как и в одиночном режиме, так и в сетевом режиме!""", reply_markup=markup)
        if not str(message.chat.id) in chat_global:
            chat_global_file = open("chat.txt", "a")
            chat_global_file.write(str(message.chat.id) + "\n")
            chat_global.add(message.chat.id)
    elif str(message.chat.id) in black_l:
        bot.send_message(message.chat.id, black_list_text)

@bot.message_handler(commands=['spec'])
def start(message):
    if str(message.chat.id) == chat:
        for user in chat_global:
            try:
                bot.send_message(user, message.text[message.text.find(' '):], parse_mode="Markdown")
            except:
                print(user)
    elif str(message.chat.id) != chat:
        bot.send_message(message.chat.id, "Извините команда вам не доступна!")

@bot.message_handler(commands=['test'])
def nachalo(message):
    black_list = open("black_list.txt", "r", encoding="UTF-8")
    black_l = black_list.read()
    if not str(message.chat.id) in black_l:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        but1 = "Да!"
        markup.add(but1)
        send = bot.send_message(message.chat.id, "Привет! Давай проведим, насколько ты хорошо знаешь игры Keplerians! Начнем?", reply_markup=markup)
        bot.register_next_step_handler(send, vp_1)
    elif str(message.chat.id) in black_l:
        bot.send_message(message.chat.id, black_list_text)

def vp_1(message):
    global markup1, but1, but2, but3, but4
    markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = answer1
    but2 = answer2
    but3 = answer3
    but4 = answer4
    markup1.add(but1, but2, but3, but4)
    markup3 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but5 = "/start"
    markup3.add(but5)
    if message.text == "Да!":
        send = bot.send_message(message.chat.id, f"{question1}\n{variants1}\n{variants2}\n{variants3}\n{variants4}", reply_markup=markup1)
        bot.register_next_step_handler(send, vp_2)
    else:
        bot.send_message(message.chat.id, "Эм, не совсем тебя понял! Нажми кнопку ниже!", reply_markup=markup3)

def vp_2(message):
    global ball1
    ball1 = 0
    markup3 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but5 = "/start"
    markup3.add(but5)
    if message.text == answer2:
        ball1 += 1
        bot.send_message(message.chat.id, f"{answer5}\n{answer7} Первой игрой Кеплерианцев была игра The Nun. Но ее удалили из Google Play за нарушение авторских прав.")
    elif message.text == answer1 or answer3 or answer4:
        bot.send_message(message.chat.id, f"{answer6}\n{answer7} Первой игрой Кеплерианцев была игра The Nun. Но ее удалили из Google Play за нарушение авторских прав.")
    else:
        bot.send_message(message.chat.id, "Эм, не совсем тебя понял! Нажми кнопку ниже!", reply_markup=markup3)

    send = bot.send_message(message.chat.id, f"{question2}\n{variants5}\n{variants6}\n{variants7}\n{variants8}")
    bot.register_next_step_handler(send, vp_3)

def vp_3(message):
    global ball2
    ball2 = 0
    markup3 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but5 = "/start"
    markup3.add(but5)
    if message.text == answer3:
        ball2 += 1
        bot.send_message(message.chat.id, f"{answer5}\n{answer7} Мистер Мит на первый взгляд кажется обычным мясником, но на самом деле он превращал людей в свиней и сдавал их на мясо (по данным из игры Mr Meat 2)")
    elif message.text == answer1 or answer2 or answer4:
        bot.send_message(message.chat.id, f"{answer6}\n{answer7} Мистер Мит на первый взгляд кажется обычным мясником, но на самом деле он превращал людей в свиней и сдавал их на мясо (по данным из игры Mr Meat 2)")
    else:
        bot.send_message(message.chat.id, "Эм, не совсем тебя понял! Нажми кнопку ниже!", reply_markup=markup3)

    send = bot.send_message(message.chat.id, f"{question3}\n{variants9}\n{variants10}\n{variants11}\n{variants12}")
    bot.register_next_step_handler(send, vp_4)

def vp_4(message):
    global ball3
    ball3 = 0
    markup3 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but5 = "/start"
    markup3.add(but5)
    if message.text == answer4:
        bot.send_message(message.chat.id, f"{answer5}\n{answer7} Ребекка является дочкой Мистера Мита. В первой части Доктор Уайт помог Ребекке превратится ей назад в человека, но Ребекка не является дочкой Доктора Уайта")
        ball3 += 1
    elif message.text == answer1 or answer2 or answer3:
        bot.send_message(message.chat.id, f"{answer6}\n{answer7} Ребекка является дочкой Мистера Мита. В первой части Доктор Уайт помог Ребекке превратится ей назад в человека, но Ребекка не является дочкой Доктора Уайта")
    else:
        bot.send_message(message.chat.id, "Эм, не совсем тебя понял! Нажми кнопку ниже!", reply_markup=markup3)

    send = bot.send_message(message.chat.id, f"{question4}\n{variants13}\n{variants14}\n{variants15}\n{variants16}")
    bot.register_next_step_handler(send, vp_5)

def vp_5(message):
    global ball4
    ball4 = 0
    markup3 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but5 = "/start"
    markup3.add(but5)
    if message.text == answer3:
        bot.send_message(message.chat.id, f"{answer5}\n{answer7} Возможно я вас удивлю, но Мишель является сестрой Ребекки. В доме Мистера Мита можно было увидеть фотографии семьи, где зачеркнутым ребенком как раз была Мишель, а не Ребекка")
        ball4 += 1
    elif message.text == answer1 or answer2 or answer4:
        bot.send_message(message.chat.id, f"{answer6}\n{answer7} Возможно я вас удивлю, но Мишель является сестрой Ребекки. В доме Мистера Мита можно было увидеть фотографии семьи, где зачеркнутым ребенком как раз была Мишель, а не Ребекка")
    else:
        bot.send_message(message.chat.id, "Эм, не совсем тебя понял! Нажми кнопку ниже!", reply_markup=markup3)

    send = bot.send_message(message.chat.id, f"{question5}\n{variants17}\n{variants18}\n{variants19}\n{variants20}")
    bot.register_next_step_handler(send, vp_6)

def vp_6(message):
    global ball5
    ball5 = 0
    markup2 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup2.add(but1, but2, but3)
    markup3 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but5 = "/start"
    markup3.add(but5)
    if message.text == answer2:
        bot.send_message(message.chat.id, f"{answer5}\n{answer7} Джей - простой мальчик из небольшого городка, который имел дело с Мороженщиком, спасал друзей от него и сам попал на фабрику Мороженщика")
        ball5 += 1
    elif message.text == answer1 or answer3 or answer4:
        bot.send_message(message.chat.id, f"{answer6}\n{answer7} Джей - простой мальчик из небольшого городка, который имел дело с Мороженщиком, спасал друзей от него и сам попал на фабрику Мороженщика")
    else:
        bot.send_message(message.chat.id, "Эм, не совсем тебя понял! Нажми кнопку ниже!", reply_markup=markup3)

    send = bot.send_message(message.chat.id, f"{question6}\n{variants21}\n{variants22}\n{variants23}", reply_markup=markup2)
    bot.register_next_step_handler(send, vp_7)

def vp_7(message):
    global ball6
    ball6 = 0
    markup3 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but5 = "/start"
    markup3.add(but5)
    if message.text == answer1:
        bot.send_message(message.chat.id, f"""{answer5}\n{answer7} в прачечной находятся дети монахини, которых сама ловила с помощью приглашений в "лагерь" """)
        ball6 += 1
    elif message.text == answer2 or answer3 or answer4:
        bot.send_message(message.chat.id, f"""{answer6}\n{answer7} в прачечной находятся дети монахини, которых сама ловила с помощью приглашений в "лагерь" """)
    else:
        bot.send_message(message.chat.id, "Эм, не совсем тебя понял! Нажми кнопку ниже!", reply_markup=markup3)

    send = bot.send_message(message.chat.id, f"{question7}\n{variants24}\n{variants25}\n{variants26}")
    bot.register_next_step_handler(send, vp_8)

def vp_8(message):
    global ball7
    ball7 = 0
    markup3 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but5 = "/start"
    markup3.add(but5)
    if message.text == answer2:
        bot.send_message(message.chat.id, f"{answer5}\n{answer7} крокодил был в третьей части Ice Scream, с помощью него можно получить револьеры, и первой части монахини, при побеге через водосток")
        ball7 += 1
    elif message.text == answer1 or answer3 or answer4:
        bot.send_message(message.chat.id, f"{answer6}\n{answer7} крокодил был в третьей части Ice Scream, с помощью него можно получить револьеры, и первой части монахини, при побеге через водосток")
    else:
        bot.send_message(message.chat.id, "Эм, не совсем тебя понял! Нажми кнопку ниже!", reply_markup=markup3)

    send = bot.send_message(message.chat.id, f"{question8}\n{variants27}\n{variants28}\n{variants29}")
    bot.register_next_step_handler(send, vp_9)

def vp_9(message):
    global ball8
    ball8 = 0
    markup3 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but5 = "/start"
    markup3.add(but5)
    if message.text == answer3:
        bot.send_message(message.chat.id, f"""{answer5}\n{answer7} 31 октября вышла первая игра Кеплерианцев под названием "Evil Nun: The Broken Mask". Она доступна в магазине Steam и Epic Games! #НеРеклама""")
        ball8 += 1
    elif message.text == answer1 or answer2 or answer4:
        bot.send_message(message.chat.id, f"""{answer6}\n{answer7} 31 октября вышла первая игра Кеплерианцев под названием "Evil Nun: The Broken Mask". Она доступна в магазине Steam и Epic Games! #НеРеклама""")
    else:
        bot.send_message(message.chat.id, "Эм, не совсем тебя понял! Нажми кнопку ниже!", reply_markup=markup3)

    send = bot.send_message(message.chat.id, f"{question9}\n{variants30}\n{variants31}\n{variants32}")
    bot.register_next_step_handler(send, vp_10)

def vp_10(message):
    global ball9
    ball9 = 0
    markup3 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but5 = "/start"
    markup3.add(but5)
    if message.text == answer1:
        bot.send_message(message.chat.id, f"{answer5}\n{answer7} Granny была полностью разработана DVLoper, Keplerians не принимали никакого участия в разработке")
        ball9 += 1
    elif message.text == answer2 or answer3 or answer4:
        bot.send_message(message.chat.id, f"{answer6}\n{answer7} Granny была полностью разработана DVLoper, Keplerians не принимали никакого участия в разработке")
    else:
        bot.send_message(message.chat.id, "Эм, не совсем тебя понял! Нажми кнопку ниже!", reply_markup=markup3)

    send = bot.send_message(message.chat.id, f"{question10}\n{variants33}\n{variants34}\n{variants35}")
    bot.register_next_step_handler(send, itog)

def itog(message):
    global ball10
    ball10 = 0
    if message.text == answer2:
        ball10 += 1
        bot.send_message(message.chat.id, f"{answer5}\n{answer7} 16 декабря вышла 7 часть Ise Scream, поэтому на данный момент частей Ise Scream 7, а не 6")
    elif message.text == answer1 or answer3 or answer4:
        bot.send_message(message.chat.id, f"{answer6}\n{answer7} 16 декабря вышла 7 часть Ise Scream, поэтому на данный момент частей Ise Scream 7, а не 6")
    markup3 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but5 = "/start"
    markup3.add(but5)
    ball = ball1 + ball2 + ball3 + ball4 + ball5 + ball6 + ball7 + ball8 + ball9 + ball10
    bot.send_message(message.chat.id, "Спасибо за прохождение теста!")
    if ball < 3:
        print(f"{message.from_user.first_name}: {ball} баллов")
        bot.send_message(message.chat.id, f"Твой балл: {ball}\nВидно ты плохо в этом разбираешься, советую подтянуть знания по играм Keplerians!", reply_markup=markup3)
    elif ball >= 3 and ball < 6:
        print(f"{message.from_user.first_name}: {ball} баллов")
        bot.send_message(message.chat.id, f"Твой балл: {ball}\nНеплохо, неплохо! Вижу ± ты игры знаешь!", reply_markup=markup3)
    elif ball >= 6 and ball < 9:
        print(f"{message.from_user.first_name}: {ball} баллов")
        bot.send_message(message.chat.id, f"Твой балл: {ball}\nВижу, игры знаешь вообще замечательно!", reply_markup=markup3)
    elif ball >= 9:
        print(f"{message.from_user.first_name}: {ball} баллов")
        bot.send_message(message.chat.id, f"Твой балл: {ball}\nДа ты вообще бог!", reply_markup=markup3)
    bot.send_message(message.chat.id, "Нажми кнопку ниже!")

@bot.message_handler(commands=['idea'])
def vibor(message):
    black_list = open("black_list.txt", "r", encoding="UTF-8")
    black_l = black_list.read()
    if not str(message.chat.id) in black_l:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        but1 = types.KeyboardButton(blogers[0])
        but2 = types.KeyboardButton(blogers[1])
        markup.add(but1, but2)
        send = bot.send_message(message.chat.id, f"Выбери, кому будешь подавать идею:", parse_mode="Markdown", reply_markup=markup)
        bot.register_next_step_handler(send, idea1)
    elif str(message.chat.id) in black_l:
        bot.send_message(message.chat.id, black_list_text)

def idea1(message):
    if message.text in blogers:
        idea[str(message.chat.id)] = str(message.text)
        i4(message)
    elif not message.text in blogers:
        send = bot.send_message(message.chat.id, "Ой, не совсем тебя понял! Нажми кнопку ниже!")
        bot.register_next_step_handler(send, idea1)

def i4(message):
    markup = types.ReplyKeyboardMarkup(True)
    but = types.KeyboardButton(stop)
    markup.add(but)
    if idea[str(message.chat.id)] == blogers[0]:
        send = bot.send_message(chat_id=message.chat.id,  text=f"Напиши сообщение, я прочитаю и отвечу\!\n\n||Или нажми {stop} если передумал подавать идею\!||", parse_mode='MarkdownV2', reply_markup=markup)
        bot.register_next_step_handler(send, sanya)
    elif idea[str(message.chat.id)] == blogers[1]:
        send = bot.send_message(chat_id=message.chat.id,  text=f"Напиши сообщение, Илья прочитает и возможно ответит\!\n\n||Или нажми {stop} если передумал подавать идею\!||", parse_mode='MarkdownV2', reply_markup=markup)
        bot.register_next_step_handler(send, sanya)

def sanya(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but = types.KeyboardButton("/start")
    markup.add(but)
    text = str(message.text)
    if idea[str(message.chat.id)] == blogers[0]:
        if message.content_type == "text" and message.text != "/stop":
            bot.send_message(message.chat.id, "Твое сообщение успешно отправлено!", reply_markup=markup)
            bot.send_message(chat_id=chat, text=f"Поступило новое предложение от {message.chat.id}! Читай: {message.text}")
        elif message.text == "/stop":
            bot.send_message(message.chat.id, "Вы отказались от предоставления идеи!", reply_markup=markup)
    if idea[str(message.chat.id)] == blogers[1]:
        if message.content_type == "text" and message.text != "/stop":
            bot.send_message(message.chat.id, "Твое сообщение успешно отправлено!", reply_markup=markup)
            bot.send_message(chat_id=chat1, text=f"Поступило новое предложение от {message.chat.id}! Читай: {message.text}")
        elif message.text == "/stop":
            bot.send_message(message.chat.id, "Вы отказались от предоставления идеи!", reply_markup=markup)


@bot.message_handler(commands=['proverka'])
def admin(message):
    ne_chat_id = str(message.chat.id)
    markup = types.ReplyKeyboardRemove()
    if ne_chat_id in admin_chat:
        if ne_chat_id == chat:
            send = bot.send_message(chat_id=chat, text="Введи Chat Id кому надо ответить", reply_markup=markup)
            bot.register_next_step_handler(send, admin1)
        elif ne_chat_id == chat1:
            send = bot.send_message(chat_id=chat1, text="Введи Chat Id кому надо ответить", reply_markup=markup)
            bot.register_next_step_handler(send, admin3)
    elif ne_chat_id != chat1:
        bot.send_message(ne_chat_id, "Извините, команда доступна только администраторам бота!")

def admin1(message):
    global chat_id2
    chat_id2 = str(message.text)
    markup = types.ReplyKeyboardRemove()
    send = bot.send_message(chat_id=chat, text="Введи ответ!", reply_markup=markup)
    bot.register_next_step_handler(send, admin2)

def admin2(message):
    bot.send_message(chat_id=chat, text="Сообщение отправлено!")
    bot.send_message(chat_id=chat_id2, text=f"Саня KONTROL CHEK ответ на твою идею! вот его текст:\n{message.text}")

def admin3(message):
    global chat_id3
    chat_id3 = str(message.text)
    send = bot.send_message(chat_id=chat1, text="Введи ответ!")
    bot.register_next_step_handler(send, admin5)

def admin5(message):
    bot.send_message(chat_id=chat1, text="Сообщение отправлено!")
    bot.send_message(chat_id=chat_id3, text=f"Илья IluyhichPLAY ответил на твою идею! Быстрее читай: {message.text}")


@bot.message_handler(commands=['beta_kmn'])
def kmn_nach(message):
    black_list = open("black_list.txt", "r", encoding="UTF-8")
    black_l = black_list.read()
    if not str(message.chat.id) in black_l:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        but1 = types.KeyboardButton("Одиночный")
        but2 = types.KeyboardButton("Сетевой")
        markup.add(but1, but2)
        send = bot.send_message(message.chat.id, "Привет! Добро пожаловать в игру Камень-ножницы-бумага! Выбери нужный тебе режим!", reply_markup=markup)
        bot.register_next_step_handler(send, kmn_vib)
    elif str(message.chat.id) in black_l:
        bot.send_message(message.chat.id, black_list_text)


def kmn_vib(message):
    global igrok1, user1
    user1 = f"{message.from_user.first_name}"
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton(kamen)
    but2 = types.KeyboardButton(noshik)
    but3 = types.KeyboardButton(bumaga)
    but4 = types.KeyboardButton(stop)
    markup.add(but1, but2, but3).add(but4)
    markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but9 = types.KeyboardButton(kmn_kolvo[0])
    but10 = types.KeyboardButton(kmn_kolvo[1])
    markup1.add(but9, but10)
    markup2= types.ReplyKeyboardRemove()
    if message.text in kmn_reshim:
        if message.text == "Одиночный":
            shet[f"{message.chat.id}kmnna1_ig"] = int(0)
            shet[f"{message.chat.id}kmnna1_bot"] = int(0)
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            but5 = types.KeyboardButton(kamen)
            but6 = types.KeyboardButton(noshik)
            but7 = types.KeyboardButton(bumaga)
            but8 = types.KeyboardButton(stop)
            markup.add(but5, but6, but7, but8)
            send = bot.send_message(message.chat.id, "Выбери Камень, ножницы или бумагу", reply_markup=markup)
            bot.register_next_step_handler(send, kmn_odin)
        elif message.text == "Сетевой":
            igrok1 = str(message.chat.id)
            send = bot.send_message(igrok1, "Выберите количество игроков ниже!", reply_markup=markup1)
            bot.register_next_step_handler(send, kmn_rasvetvlenie)
    elif not message.text in kmn_reshim:
        send = bot.send_message(message.chat.id, "Ой, не совсем тебя понял! Нажми кнопку ниже!")
        bot.register_next_step_handler(send, kmn_vib)

def kmn_rasvetvlenie(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton("/stop")
    markup.add(but1)
    if message.text in kmn_kolvo:
        if message.text == kmn_kolvo[0]:
            p = open("Важное фото.png", "rb")
            send = bot.send_photo(message.chat.id, photo=p, caption="Отлично! Введи Chat Id нужного пользователя!\n*Важно! Что такое Chat Id и как его получить?*\nChat Id - это уникальный идентификатор, который используется в ботах для отправки сообщений пользователям (надеюсь объяснил понятно).\nДля того чтобы получить Chat Id вашего друга нужно найти сообщение друга и отправить его боту @userinfobot и скопировать набор цифр из *ВТОРОЙ СТРОКИ* и отправить его в ответ на это сообщение!\n_P.S. кнопка /stop это для того чтобы отменить выбор!_", reply_markup=markup, parse_mode="Markdown")
            bot.register_next_step_handler(send, kmn_mp)
        elif message.text == kmn_kolvo[1]:
            p = open("Важное фото.png", "rb")
            send = bot.send_photo(message.chat.id, photo=p, caption="Отлично! Введи Chat Id одного из нужных пользователя!\n*Важно! Что такое Chat Id и как его получить?*\nChat Id - это уникальный идентификатор, который используется в ботах для отправки сообщений пользователям (надеюсь объяснил понятно).\nДля того чтобы получить Chat Id вашего друга нужно найти сообщение друга и отправить его боту @userinfobot и скопировать набор цифр из *ВТОРОЙ СТРОКИ* и отправить его в ответ на это сообщение!\n_P.S. кнопка /stop это для того чтобы отменить выбор!_", reply_markup=markup, parse_mode="Markdown")
            bot.register_next_step_handler(send, kmn_mp_3_priglas_ig2)

def kmn_odin(message):
    markup3 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but5 = "/start"
    markup3.add(but5)
    bot_knb_text = random.choice(["Камень", "Ножницы", "Бумага"])
    if message.text in bot_knb1:
        if message.text in bot_knb:
            user_message = message.text
            bot.send_message(message.chat.id, "Бот выбрал " + bot_knb_text)
            if user_message == bot_knb_text:
                shet[f"{message.chat.id}kmnna1_ig"] += int(1)
                shet[f"{message.chat.id}kmnna1_bot"] += int(1)
                send = bot.send_message(message.chat.id, f"Ничья!\nСчет:\nВы *" + str(shet[f"{message.chat.id}kmnna1_ig"]) + "*:*" + str(shet[f"{message.chat.id}kmnna1_bot"]) +"* Бот", parse_mode="Markdown")
                bot.register_next_step_handler(send, kmn_odin)
                print(f"{message.chat.id} " + str(shet[f"{message.chat.id}kmnna1_ig"]) + ":" + str(shet[f"{message.chat.id}kmnna1_bot"]) + " бот")
            elif (user_message == kamen and bot_knb_text == noshik) or (user_message == noshik and bot_knb_text == bumaga) or (user_message == bumaga and bot_knb_text == kamen):
                shet[f"{message.chat.id}kmnna1_ig"] += int(1)
                send = bot.send_message(message.chat.id, f"Ты победил!\nСчет:\nВы *" + str(shet[f"{message.chat.id}kmnna1_ig"]) + "*:*" + str(shet[f"{message.chat.id}kmnna1_bot"]) +"* Бот", parse_mode="Markdown")
                bot.register_next_step_handler(send, kmn_odin)
                print(f"{message.chat.id} " + str(shet[f"{message.chat.id}kmnna1_ig"]) + ":" + str(shet[f"{message.chat.id}kmnna1_bot"]) + " бот")
            elif (bot_knb_text == kamen and user_message == noshik) or (bot_knb_text == noshik and user_message == bumaga) or (bot_knb_text == bumaga and user_message == kamen):
                shet[f"{message.chat.id}kmnna1_bot"] += int(1)
                send = bot.send_message(message.chat.id, f"Бот победил!\nСчет:\nВы *" + str(shet[f"{message.chat.id}kmnna1_ig"]) + "*:*" + str(shet[f"{message.chat.id}kmnna1_bot"]) +"* Бот", parse_mode="Markdown")
                bot.register_next_step_handler(send, kmn_odin)
                print(f"{message.chat.id} " + str(shet[f"{message.chat.id}kmnna1_ig"]) + ":" + str(shet[f"{message.chat.id}kmnna1_bot"]) + " бот")
        elif message.text == "/stop":
            bot.send_message(message.chat.id, f"Вы завершили игру!\nСчет:\nВы *" + str(shet[f"{message.chat.id}kmnna1_ig"]) + "*:*" + str(shet[f"{message.chat.id}kmnna1_bot"]) +"* Бот", reply_markup=markup3, parse_mode="Markdown")
    elif not message.text in bot_knb1:
        send = bot.send_message(message.chat.id, "Сорян! Я тебя не понял! Выбери значение из списка ниже!")
        bot.register_next_step_handler(send, kmn_odin)

def kmn_mp(message):
    black_list = open("black_list.txt", "r", encoding="UTF-8")
    black_l = black_list.read()
    markup4 = types.ReplyKeyboardRemove()
    markup3 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but5 = "/start"
    text2 = f"Попросите вашего друга зайти в бот и нажать кнопку /start, а потом повторите попытку, либо нажмите {stop} для прекращения приглашений друга!!\nОшибка повторяется? Ответ ищите [здесь](https://t.me/kontrol_chek185/1131)"
    markup3.add(but5)
    text = "[здесь](https://t.me/kontrol_chek185/1131)"
    if message.text.isdigit():
        global igrok2
        igrok2 = str(message.text)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        but1 = types.KeyboardButton('Да!')
        but2 = types.KeyboardButton("Нет!")
        markup.add(but1, but2)
        chat_global_file = open("chat.txt", "r")
        allText = chat_global_file.read()
        spis_chat_id = list(map(str, allText.split()))
        if igrok1 != igrok2:
            if igrok2 in spis_chat_id:
                if not igrok2 in black_l:
                    bot.send_message(chat_id=igrok1, text="Отправил приглашение! Ожидай ответа!", reply_markup=markup4)
                    send = bot.send_message(chat_id=igrok2, text=f"Игрок {user1} прислал вам приглашение, хотите играть?", reply_markup=markup)
                    bot.register_next_step_handler(send, kmn_mp_vib_ig1)
                elif igrok2 in black_l:
                    send = bot.send_message(igrok1, "Пользователь в черном списке! Введите другой Chat Id или нажмите /stop")
                    bot.register_next_step_handler(send, kmn_mp)
            elif not igrok2 in spis_chat_id:
                send = bot.send_message(igrok1, f"Пользователь не найден в базе данных бота! {text2}", parse_mode="Markdown")
                bot.register_next_step_handler(send, kmn_mp)
        elif igrok2 == igrok1:
            send = bot.send_message(message.chat.id, f"Извините с самим собой играть нельзя! Попробуйте еще раз!\nЧто делать если возникает такая ошибка? Ищите {text}", parse_mode="Markdown")
            bot.register_next_step_handler(send, kmn_mp)
        chat_global_file.close()
    elif not message.text.isdigit() and message.text != "/stop":
        send = bot.send_message(chat_id=igrok1, text="Вводите только цифры!")
        bot.register_next_step_handler(send, kmn_mp)
    elif not message.text.isdigit() and message.text == "/stop":
        bot.send_message(message.chat.id, "Вы остановили выбор, нажмите кнопку ниже!", reply_markup=markup3)

def kmn_mp_vib_ig1(message):
    markup3 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but5 = types.KeyboardButton("/start")
    markup3.add(but5)
    if message.text in slova:
        global user2
        shet[f"{igrok1}vs{igrok2}_hod{igrok1}"] = 0
        shet[f"{igrok1}vs{igrok2}_hod{igrok2}"] = 0
        user2 = f"{message.from_user.first_name}"
        markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
        but1 = types.KeyboardButton(kamen)
        but2 = types.KeyboardButton(noshik)
        but3 = types.KeyboardButton(bumaga)
        but4 = types.KeyboardButton(stop)
        markup1.add(but1, but2, but3).add(but4)
        markup2 = types.ReplyKeyboardRemove()
        if message.text == "Да!":
            send = bot.send_message(chat_id=igrok1, text="Игрок принял приглашение! Выбери Камень, ножницы или бумага!", reply_markup=markup1)
            bot.send_message(chat_id=igrok2, text=f"Вы приняли приглашение от {user1}! Подождите его выбор!", reply_markup=markup2)
            bot.register_next_step_handler(send, kmn_mp_vib_ig2)
        elif message.text == "Нет!":
            bot.send_message(chat_id=igrok1, text="Пользователь отклонил приглашение!", reply_markup=markup3)
            bot.send_message(chat_id=igrok2, text="Вы отклонили приглашение!", reply_markup=markup3)
    elif not message.text in slova:
        send = bot.send_message(chat_id=igrok2, text="Я тебя не понял, введи значения ниже!")
        bot.register_next_step_handler(send, kmn_mp_vib_ig1)


def kmn_mp_vib_ig2(message):
    markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton(kamen)
    but2 = types.KeyboardButton(noshik)
    but3 = types.KeyboardButton(bumaga)
    but4 = types.KeyboardButton(stop)
    markup1.add(but1, but2, but3).add(but4)
    markup2 = types.ReplyKeyboardRemove()
    markup3 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but5 = types.KeyboardButton("/start")
    markup3.add(but5)
    if message.text in bot_knb1:
        if message.text in bot_knb:
            shet[f"{igrok1}vs{igrok2}_zn{igrok1}"] = message.text
            bot.send_message(chat_id=igrok1, text="Передали пользователю шанс выбора!", reply_markup=markup2)
            send = bot.send_message(chat_id=igrok2, text="Игрок выбрал! Выбери Камень, ножницы или бумагу!", reply_markup=markup1)
            bot.register_next_step_handler(send, kmn_mp_itog)
        elif message.text == "/stop":
            bot.send_message(chat_id=igrok1, text=f"Вы завершили игру!\nОбщий счет:\nВы *" + str(shet[f"{igrok1}vs{igrok2}_hod{igrok1}"]) + "*:*" + str(shet[f"{igrok1}vs{igrok2}_hod{igrok2}"]) + f"* {user2}", reply_markup=markup3, parse_mode="Markdown")
            bot.send_message(chat_id=igrok2, text=f"Пользователь завершил игру!\nОбщий счет:\nВы *" + str(shet[f"{igrok1}vs{igrok2}_hod{igrok1}"]) + "*:*" + str(shet[f"{igrok1}vs{igrok2}_hod{igrok2}"]) + f"* {user2}", reply_markup=markup3, parse_mode="Markdown")
    elif not message.text in bot_knb1:
        send = bot.send_message(chat_id=igrok1, text="Не совсем тебя понял!")
        bot.register_next_step_handler(send, kmn_mp_vib_ig2)

def kmn_mp_itog(message):
    markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton(kamen)
    but2 = types.KeyboardButton(noshik)
    but3 = types.KeyboardButton(bumaga)
    but4 = types.KeyboardButton(stop)
    markup1.add(but1, but2, but3).add(but4)
    markup2 = types.ReplyKeyboardRemove()
    markup3 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but5 = "/start"
    markup3.add(but5)
    if message.text in bot_knb1:
        if message.text in bot_knb:
            shet[f"{igrok1}vs{igrok2}_zn{igrok2}"] = message.text
            bot.send_message(chat_id=igrok1, text="Ты выбрал: *" + str(shet[f"{igrok1}vs{igrok2}_zn{igrok1}"]) + "*\nДруг выбрал: *" + str(shet[f"{igrok1}vs{igrok2}_zn{igrok2}"]) + "*", parse_mode="Markdown")
            bot.send_message(chat_id=igrok2, text="Ты выбрал: *" + str(shet[f"{igrok1}vs{igrok2}_zn{igrok2}"]) + "*\nДруг выбрал: *" + str(shet[f"{igrok1}vs{igrok2}_zn{igrok1}"]) + "*", parse_mode="Markdown")
            if shet[f"{igrok1}vs{igrok2}_zn{igrok1}"] == shet[f"{igrok1}vs{igrok2}_zn{igrok2}"]:
                shet[f"{igrok1}vs{igrok2}_hod{igrok1}"] += 1
                shet[f"{igrok1}vs{igrok2}_hod{igrok2}"] += 1
                bot.send_message(chat_id=igrok1, text=f"Ничья!\nТекущий счет:\nВы *" + str(shet[f"{igrok1}vs{igrok2}_hod{igrok1}"]) + "*:*" + str(shet[f"{igrok1}vs{igrok2}_hod{igrok2}"]) + f"* {user2}", parse_mode="Markdown")
                bot.send_message(chat_id=igrok2, text=f"Ничья!\nТекущий счет:\nВы *" + str(shet[f"{igrok1}vs{igrok2}_hod{igrok2}"]) + "*:*" + str(shet[f"{igrok1}vs{igrok2}_hod{igrok1}"]) + f"* {user1}", parse_mode="Markdown")
                send1 = bot.send_message(chat_id=igrok1, text="Выберите Камень, ножницы или бумагу!", reply_markup=markup1)
                bot.send_message(chat_id=igrok2, text="Подожди выбор первого пользователя!", reply_markup=markup2)
                bot.register_next_step_handler(send1, kmn_mp_vib_ig2)
            elif (shet[f"{igrok1}vs{igrok2}_zn{igrok1}"] == kamen and shet[f"{igrok1}vs{igrok2}_zn{igrok2}"] == noshik) or (shet[f"{igrok1}vs{igrok2}_zn{igrok1}"] == noshik and shet[f"{igrok1}vs{igrok2}_zn{igrok2}"] == bumaga) or (shet[f"{igrok1}vs{igrok2}_zn{igrok1}"] == bumaga and shet[f"{igrok1}vs{igrok2}_zn{igrok2}"] == kamen):
                shet[f"{igrok1}vs{igrok2}_hod{igrok1}"] += 1
                bot.send_message(chat_id=igrok1, text=f"Ты победил!\nТекущий счет:\nВы *" + str(shet[f"{igrok1}vs{igrok2}_hod{igrok1}"]) + "*:*" + str(shet[f"{igrok1}vs{igrok2}_hod{igrok2}"]) + f"* {user2}", parse_mode="Markdown")
                bot.send_message(chat_id=igrok2, text=f"Друг победил!\nТекущий счет:\nВы *" + str(shet[f"{igrok1}vs{igrok2}_hod{igrok2}"]) + "*:*" + str(shet[f"{igrok1}vs{igrok2}_hod{igrok1}"]) + f"* {user1}", parse_mode="Markdown")
                send1 = bot.send_message(chat_id=igrok1, text="Выберите Камень, ножницы или бумагу первыми!", reply_markup=markup1)
                bot.send_message(chat_id=igrok2, text="Подожди выбор первого пользователя!", reply_markup=markup2)
                bot.register_next_step_handler(send1, kmn_mp_vib_ig2)
            elif (shet[f"{igrok1}vs{igrok2}_zn{igrok1}"] == kamen and shet[f"{igrok1}vs{igrok2}_zn{igrok2}"] == bumaga) or (shet[f"{igrok1}vs{igrok2}_zn{igrok1}"] == noshik and shet[f"{igrok1}vs{igrok2}_zn{igrok2}"] == kamen) or (shet[f"{igrok1}vs{igrok2}_zn{igrok1}"] == bumaga and shet[f"{igrok1}vs{igrok2}_zn{igrok2}"] == noshik):
                shet[f"{igrok1}vs{igrok2}_hod{igrok2}"] += 1
                bot.send_message(chat_id=igrok2, text=f"Ты победил!\nТекущий счет:\nВы *" + str(shet[f"{igrok1}vs{igrok2}_hod{igrok2}"]) + "*:*" + str(shet[f"{igrok1}vs{igrok2}_hod{igrok1}"]) + f"* {user1}", parse_mode="Markdown")
                bot.send_message(chat_id=igrok1, text=f"Друг победил!\nТекущий счет:\nВы *" + str(shet[f"{igrok1}vs{igrok2}_hod{igrok1}"]) + "*:*" + str(shet[f"{igrok1}vs{igrok2}_hod{igrok2}"]) + f"* {user2}", parse_mode="Markdown")
                send1 = bot.send_message(chat_id=igrok1, text="Выберите Камень, ножницы или бумагу первыми!", reply_markup=markup1)
                bot.send_message(chat_id=igrok2, text="Подожди выбор первого пользователя!", reply_markup=markup2)
                bot.register_next_step_handler(send1, kmn_mp_vib_ig2)
            print(f"Текущий счет:\n{user1} " + str(shet[f"{igrok1}vs{igrok2}_hod{igrok1}"]) + ":" + str(shet[f"{igrok1}vs{igrok2}_hod{igrok2}"]) + f" {user2}")
        elif message.text == "/stop":
            bot.send_message(chat_id=igrok2, text=f"Вы завершили игру!\nОбщий счет:\nВы *" + str(shet[f"{igrok1}vs{igrok2}_hod{igrok1}"]) + "*:*" + str(shet[f"{igrok1}vs{igrok2}_hod{igrok2}"]) + f"* {user2}", reply_markup=markup3, parse_mode="Markdown")
            bot.send_message(chat_id=igrok1, text=f"Пользователь завершил игру!\nОбщий счет:\nВы *" + str(shet[f"{igrok1}vs{igrok2}_hod{igrok1}"]) + "*:*" + str(shet[f"{igrok1}vs{igrok2}_hod{igrok2}"]) + f"* {user2}", reply_markup=markup3, parse_mode="Markdown")
    elif not message.text in bot_knb1:
        send = bot.send_message(chat_id=igrok2, text="Не совсем тебя понял!")
        bot.register_next_step_handler(send, kmn_mp_itog)

def kmn_mp_3_priglas_ig2(message):
    if message.text.isdigit():
        global user2, igrok2
        igrok2 = str(message.text)
        text2 = f"Попросите вашего друга зайти в бот и нажать кнопку /start, а потом повторите попытку, либо нажмите {stop} для прекращения приглашений друга!!\nОшибка повторяется? Ответ ищите [здесь](https://t.me/kontrol_chek185/1131)"
        text = "[здесь](https://t.me/kontrol_chek185/1131)"
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        but1 = types.KeyboardButton("Да!")
        but2 = types.KeyboardButton("Нет!")
        markup.add(but1, but2)
        markup3 = types.ReplyKeyboardMarkup(resize_keyboard=True)
        but5 = "/start"
        markup3.add(but5)
        chat_global_file = open("chat.txt", "r")
        allText = chat_global_file.read()
        spis_chat_id = list(map(str, allText.split()))
        if igrok1 != igrok2:
            if igrok2 in spis_chat_id:
                bot.send_message(igrok1, "Отправил приглашение! Ожидайте ответа!")
                send = bot.send_message(igrok2, f"Пользователь {user1} прислал вам приглашение! Хотите ли вы с ним поиграть?", reply_markup=markup)
                bot.register_next_step_handler(send, kmn_mp_3)
            elif not igrok2 in spis_chat_id:
                send = bot.send_message(igrok1, f"Пользователь не найден в базе данных бота! {text2}", parse_mode="Markdown")
                bot.register_next_step_handler(send, kmn_mp)
        elif igrok2 == igrok1:
            send = bot.send_message(message.chat.id, f"Извините с самим собой играть нельзя! Попробуйте еще раз!\nЧто делать если возникает такая ошибка? Ищите {text}", parse_mode="Markdown")
            bot.register_next_step_handler(send, kmn_mp)
        chat_global_file.close()
    elif not message.text.isdigit() and message.text != "/stop":
        send = bot.send_message(chat_id=igrok1, text="Вводите только цифры!")
        bot.register_next_step_handler(send, kmn_mp)
    elif not message.text.isdigit() and message.text == "/stop":
        bot.send_message(message.chat.id, "Вы остановили выбор, нажмите кнопку ниже!", reply_markup=markup3)

def kmn_mp_3(message):
    global user2
    user2 = str(message.from_user.first_name)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but = types.KeyboardButton("Передать возможность второму игроку")
    markup.add(but)
    markup2 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but5 = types.KeyboardButton("/start")
    markup2.add(but5)
    if message.text.title() in vib:
        if message.text == "Да!":
            p = open("Важное фото.png", "rb")
            send = bot.send_photo(chat_id=igrok1, photo=p, caption=f"Игрок {user2} принял приглашение! Отправь мне Chat Id третьего друга или дай возможность {user2}\n*Важно! Что такое Chat Id и как его получить?*\nChat Id - это уникальный идентификатор, который используется в ботах для отправки сообщений пользователям (надеюсь объяснил понятно).\nДля того чтобы получить Chat Id вашего друга нужно найти сообщение друга и отправить его боту @userinfobot и скопировать набор цифр из *ВТОРОЙ СТРОКИ* и отправить его в ответ на это сообщение!\n_P.S. кнопка /stop это для того чтобы отменить выбор!_", parse_mode="Markdown", reply_markup=markup)
            bot.send_message(igrok2, "Окей! Ждем приглашения третьего игрока!")
            bot.register_next_step_handler(send, kmn_peredacha)
        elif message.text == "Нет!":
            bot.send_message(igrok1, f"Пользователь {user2} отклонил приглашение!", reply_markup=markup2)
            bot.send_message(igrok2, "Вы отклонили приглашение!", reply_markup=markup2)
    elif not message.text.title() in vib:
        send = bot.send_message(igrok2, "Вы кажется не то ввели. Нажмите кнопку ниже!")
        bot.register_next_step_handler(send, kmn_mp_3)

def kmn_peredacha(message):
    text2 = f"Попросите вашего друга зайти в бот и нажать кнопку /start, а потом повторите попытку, либо нажмите {stop} для прекращения приглашений друга!!\nОшибка повторяется? Ответ ищите [здесь](https://t.me/kontrol_chek185/1131)"
    text = "[здесь](https://t.me/kontrol_chek185/1131)"
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton("Да!")
    but2 = types.KeyboardButton("Нет!")
    markup.add(but1, but2)
    markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but = types.KeyboardButton("Передать возможность первому игроку")
    markup1.add(but)
    markup2 = types.ReplyKeyboardRemove()
    if message.text.isdigit():
        global igrok3
        igrok3 = str(message.text)
        chat_global_file = open("chat.txt", "r")
        allText = chat_global_file.read()
        spis_chat_id = list(map(str, allText.split()))
        if igrok1 != igrok3 and igrok2 != igrok3:
            if igrok3 in spis_chat_id:
                bot.send_message(igrok1, "Приняли! Ожидайте ответа!", reply_markup=markup2)
                bot.send_message(igrok2, "Подождите еще! Отправили приглашение третьему другу!", reply_markup=markup2)
                send = bot.send_message(igrok3, f"{user1} и {user2} отправили вам приглашение сыграть вместе в игру Камень-ножницы-бумага! Вы согласны?", reply_markup=markup)
                bot.register_next_step_handler(send, kmn_vib_ig1_3)
            elif not igrok2 in spis_chat_id:
                send = bot.send_message(igrok1, f"Пользователь не найден в базе данных бота! {text2}", parse_mode="Markdown")
                bot.register_next_step_handler(send, kmn_peredacha)
        elif igrok1 == igrok3 or igrok2 == igrok3:
            send = bot.send_message(message.chat.id, f"Извините с самим собой играть нельзя! Попробуйте еще раз!\nЧто делать если возникает такая ошибка? Ищите {text}", parse_mode="Markdown")
            bot.register_next_step_handler(send, kmn_peredacha)
        chat_global_file.close()
    elif not message.text.isdigit() and message.text == "Передать возможность второму игроку":
        p = open("Важное фото.png", "rb")
        bot.send_message(igrok1, f"Окей! Отправили возможность приглашения игроку {user2}", parse_mode="Markdown", reply_markup=markup2)
        send = bot.send_photo(igrok2, photo=p, caption=f"Игрок {user1} передал вам возможность выбора друга! Введите Chat Id вашего друга!\n{text_photo}", reply_markup=markup1, parse_mode="Markdown")
        bot.register_next_step_handler(send, kmn_mp_3_1)
    elif not message.text.isdigit() and message.text != "Передать возможность второму игроку":
        send = bot.send_message(igrok1, "Ой, мы кажется вас не поняли! Введите Chat Id или передайте возможность выбора второму другу")
        bot.register_next_step_handler(send, kmn_peredacha)

def kmn_mp_3_1(message):
    text2 = f"Попросите вашего друга зайти в бот и нажать кнопку /start, а потом повторите попытку, либо нажмите {stop} для прекращения приглашений друга!!\nОшибка повторяется? Ответ ищите [здесь](https://t.me/kontrol_chek185/1131)"
    text = "[здесь](https://t.me/kontrol_chek185/1131)"
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton("Да!")
    but2 = types.KeyboardButton("Нет!")
    markup.add(but1, but2)
    markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but = types.KeyboardButton("Передать возможность второму игроку")
    markup1.add(but)
    markup2 = types.ReplyKeyboardRemove()
    if message.text.isdigit():
        global igrok3
        igrok3 = str(message.text)
        chat_global_file = open("chat.txt", "r")
        allText = chat_global_file.read()
        spis_chat_id = list(map(str, allText.split()))
        if igrok1 != igrok3 and igrok2 != igrok3:
            if igrok3 in spis_chat_id:
                bot.send_message(igrok1, "Приняли! Ожидайте ответа!", reply_markup=markup2)
                bot.send_message(igrok2, "Подождите еще! Отправили приглашение третьему другу!", reply_markup=markup2)
                send = bot.send_message(igrok3, f"{user1} и {user2} отправили вам приглашение сыграть вместе в игру Камень-ножницы-бумага! Вы согласны?", reply_markup=markup)
                bot.register_next_step_handler(send, kmn_vib_ig1_3)
            elif not igrok2 in spis_chat_id:
                send = bot.send_message(igrok1, f"Пользователь не найден в базе данных бота! {text2}", parse_mode="Markdown")
                bot.register_next_step_handler(send, kmn_mp_3_1)
        elif igrok1 == igrok3 or igrok2 == igrok3:
            send = bot.send_message(message.chat.id, f"Извините с самим собой играть нельзя! Попробуйте еще раз!\nЧто делать если возникает такая ошибка? Ищите {text}", parse_mode="Markdown")
            bot.register_next_step_handler(send, kmn_mp_3_1)
        chat_global_file.close()
    elif not message.text.isdigit() and message.text == "Передать возможность первому игроку":
        p = open("Важное фото.png", "rb")
        bot.send_message(igrok2, f"Окей! Вернули возможность приглашения игроку {user1}", reply_markup=markup2)
        send = bot.send_photo(igrok1, photo=p, caption=f"Игрок {user2} отказался от возможности выбора друга! Введите Chat Id вашего друга!\n{text_photo}", reply_markup=markup1, parse_mode="Markdown")
        bot.register_next_step_handler(send, kmn_peredacha)
    elif not message.text.isdigit() and message.text != "Передать возможность второму игроку":
        send = bot.send_message(igrok2, "Ой, мы кажется вас не поняли! Введите Chat Id или передайте возможность выбора второму другу")
        bot.register_next_step_handler(send, kmn_mp_3)

def kmn_vib_ig1_3(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton(kamen)
    but2 = types.KeyboardButton(noshik)
    but3 = types.KeyboardButton(bumaga)
    but4 = types.KeyboardButton(stop)
    markup.add(but1, but2, but3).add(but4)
    markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but5 = types.KeyboardButton("Отменить игру")
    but6 = types.KeyboardButton("Пригласить другого пользователя")
    but7 = types.KeyboardButton("Играть в двоем")
    markup1.add(but5, but6, but7)
    markup2 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but8 = types.KeyboardButton("/start")
    markup2.add(but8)
    markup3 = types.ReplyKeyboardRemove()
    global user3
    user3 = str(message.from_user.first_name)
    if message.text.title() in vib:
        if message.text == "Да!":
            shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"] = 0
            shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"] = 0
            shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"] = 0
            send = bot.send_message(igrok1, f"Ура! {user3} принял приглашение! Выберите Камень, ножницы или бумагу!", reply_markup=markup)
            bot.send_message(igrok2, f"Ура! {user3} принял приглашения! Подожди выбор {user1}", reply_markup=markup3)
            bot.send_message(igrok3, f"Вы приняли приглашение! Подожди выбор {user1}", reply_markup=markup3)
            bot.register_next_step_handler(send, kmn_vib_ig2_3)
        elif message.text == "Нет!":
            send = bot.send_message(igrok1, f"{user3} отклонил приглашение! Выберите одно из действий ниже!", reply_markup=markup1)
            bot.send_message(igrok2, f"{user3} отклонил приглашение! Ждем решение первого игрока!", reply_markup=markup3)
            bot.send_message(igrok3, "Вы отклонили приглашение!", reply_markup=markup2)
            bot.register_next_step_handler(send, kmn_konflikt)
    elif not message.text.title() in vib:
        send = bot.send_message(igrok3, "Я вас не понял! Нажми кнопку ниже!")
        bot.register_next_step_handler(send, kmn_vib_ig1_3)

def kmn_vib_ig2_3(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton(kamen)
    but2 = types.KeyboardButton(noshik)
    but3 = types.KeyboardButton(bumaga)
    but4 = types.KeyboardButton(stop)
    markup.add(but1, but2, but3).add(but4)
    markup2 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but8 = types.KeyboardButton("/start")
    markup2.add(but8)
    markup3 = types.ReplyKeyboardRemove()
    if message.text in bot_knb1:
        if message.text in bot_knb:
            shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"] = message.text
            bot.send_message(igrok1, f"Окей, принял! Жду решения {user2}.", reply_markup=markup3)
            send = bot.send_message(igrok2, f"{user1} выбрал! Настал ваш выбор: выберите камень, ножницы или бумагу!", reply_markup=markup)
            bot.send_message(igrok3, f"{user1} сделал выбор! Ждем выбора второго игрока!", reply_markup=markup3)
            bot.register_next_step_handler(send, kmn_vib_ig3_3)
        elif message.text == "/stop":
            bot.send_message(igrok1, f"Вы завершили игру!\nОбщий счёт:\n{user1}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"]) + f"*\n{user2}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"]) + f"*\n{user3}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"]) + "*", parse_mode="Markdown", reply_markup=markup2)
            bot.send_message(igrok2, f"{user1} завершил игру!\nОбщий счёт:\n{user1}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"]) + f"*\n{user2}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"]) + f"*\n{user3}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"]) + "*", parse_mode="Markdown", reply_markup=markup2)
            bot.send_message(igrok3, f"{user1} завершил игру!\nОбщий счёт:\n{user1}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"]) + f"*\n{user2}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"]) + f"*\n{user3}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"]) + "*", parse_mode="Markdown", reply_markup=markup2)
    elif not message.text in bot_knb1:
        send = bot.send_message(igrok1, "Ой, не совсем тебя поняли! Нажми любую кнопку ниже!")
        bot.register_next_step_handler(send, kmn_vib_ig2_3)

def kmn_vib_ig3_3(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton(kamen)
    but2 = types.KeyboardButton(noshik)
    but3 = types.KeyboardButton(bumaga)
    but4 = types.KeyboardButton(stop)
    markup.add(but1, but2, but3).add(but4)
    markup2 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but5 = types.KeyboardButton("/start")
    markup2.add(but5)
    markup3 = types.ReplyKeyboardRemove()
    if message.text in bot_knb1:
        if message.text in bot_knb:
            shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"] = message.text
            bot.send_message(igrok1, f"{user2} сделал выбор! Ждем выбор {user3}!", reply_markup=markup3)
            bot.send_message(igrok2, f"Окей, принял! Жду решения {user3}.", reply_markup=markup3)
            send = bot.send_message(igrok3, f"{user2} выбрал! Настал ваш выбор: выберите камень, ножницы или бумагу!", reply_markup=markup)
            bot.register_next_step_handler(send, kmn_vib_itog_3)
        elif message.text == "/stop":
            bot.send_message(igrok2, f"Вы завершили игру!\nОбщий счёт:\n{user1}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"]) + f"*\n{user2}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"]) + f"*\n{user3}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"]) + "*", parse_mode="Markdown", reply_markup=markup2)
            bot.send_message(igrok1, f"{user2} завершил игру!\nОбщий счёт:\n{user1}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"]) + f"*\n{user2}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"]) + f"*\n{user3}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"]) + "*", parse_mode="Markdown", reply_markup=markup2)
            bot.send_message(igrok3, f"{user2} завершил игру!\nОбщий счёт:\n{user1}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"]) + f"*\n{user2}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"]) + f"*\n{user3}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"]) + "*", parse_mode="Markdown", reply_markup=markup2)
    elif not message.text in bot_knb1:
        send = bot.send_message(igrok2, "Ой, не совсем тебя поняли! Нажми любую кнопку ниже!")
        bot.register_next_step_handler(send, kmn_vib_ig3_3)

def kmn_vib_itog_3(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton(kamen)
    but2 = types.KeyboardButton(noshik)
    but3 = types.KeyboardButton(bumaga)
    but4 = types.KeyboardButton(stop)
    markup.add(but1, but2, but3).add(but4)
    markup1 = types.ReplyKeyboardRemove()
    markup2 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but5 = types.KeyboardButton("/start")
    markup2.add(but5)
    if message.text in bot_knb1:
        if message.text in bot_knb:
            shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok3}"] = message.text
            bot.send_message(igrok1, f"Ты выбрал: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"]) + f"*\n{user2} выбрал: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"]) + f"*\n{user3} выбрал: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok3}"]) + "*", parse_mode="Markdown")
            bot.send_message(igrok2, f"Ты выбрал: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"]) + f"*\n{user1} выбрал: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"]) + f"*\n{user3} выбрал: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok3}"]) + "*", parse_mode="Markdown")
            bot.send_message(igrok3, f"Ты выбрал: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok3}"]) + f"*\n{user1} выбрал: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"]) + f"*\n{user2} выбрал: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"]) + "*", parse_mode="Markdown")
            if shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"] == shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"] and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"] == shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok3}"]:
                shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"] += 1
                shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"] += 1
                shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"] += 1
                bot.send_message(igrok1, f"Ничья!\nТекущий счёт:\n{user1}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"]) + f"*\n{user2}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"]) + f"*\n{user3}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"]) + "*", parse_mode="Markdown")
                bot.send_message(igrok2, f"Ничья!\nТекущий счёт:\n{user1}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"]) + f"*\n{user2}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"]) + f"*\n{user3}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"]) + "*", parse_mode="Markdown")
                bot.send_message(igrok3, f"Ничья!\nТекущий счёт:\n{user1}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"]) + f"*\n{user2}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"]) + f"*\n{user3}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"]) + "*", parse_mode="Markdown")
                send = bot.send_message(igrok1, "Выберите Камень, ножницы или бумагу!", reply_markup=markup)
                bot.send_message(igrok2, "Подожди выбор первого пользователя!", reply_markup=markup1)
                bot.send_message(igrok3, "Подожди выбор первого пользователя!", reply_markup=markup1)
                bot.register_next_step_handler(send, kmn_vib_ig2_3)
            elif (shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"] == kamen and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"] == noshik and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"] == shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok3}"]) or (shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"] == noshik and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"] == bumaga and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"] == shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok3}"]) or (shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"] == bumaga and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"] == kamen and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"] == shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok3}"]):
                shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"] += 1
                bot.send_message(igrok1, f"Ты победил!\nТекущий счёт:\n{user1}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"]) + f"*\n{user2}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"]) + f"*\n{user3}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"]) + "*", parse_mode="Markdown")
                bot.send_message(igrok2, f"{user1} победил!\nТекущий счёт:\n{user1}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"]) + f"*\n{user2}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"]) + f"*\n{user3}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"]) + "*", parse_mode="Markdown")
                bot.send_message(igrok3, f"{user1} победил!\nТекущий счёт:\n{user1}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"]) + f"*\n{user2}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"]) + f"*\n{user3}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"]) + "*", parse_mode="Markdown")
                send = bot.send_message(igrok1, "Выберите Камень, ножницы или бумагу!", reply_markup=markup)
                bot.send_message(igrok2, "Подожди выбор первого пользователя!", reply_markup=markup1)
                bot.send_message(igrok3, "Подожди выбор первого пользователя!", reply_markup=markup1)
                bot.register_next_step_handler(send, kmn_vib_ig2_3)
            elif (shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"] == kamen and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"] == noshik and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"] == shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok3}"]) or (shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"] == noshik and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"] == bumaga and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"] == shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok3}"]) or (shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"] == bumaga and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"] == kamen and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"] == shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok3}"]):
                shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"] += 1
                bot.send_message(igrok2, f"Ты победил!\nТекущий счёт:\n{user1}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"]) + f"*\n{user2}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"]) + f"*\n{user3}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"]) + "*", parse_mode="Markdown")
                bot.send_message(igrok1, f"{user2} победил!\nТекущий счёт:\n{user1}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"]) + f"*\n{user2}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"]) + f"*\n{user3}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"]) + "*", parse_mode="Markdown")
                bot.send_message(igrok3, f"{user2} победил!\nТекущий счёт:\n{user1}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"]) + f"*\n{user2}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"]) + f"*\n{user3}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"]) + "*", parse_mode="Markdown")
                send = bot.send_message(igrok1, "Выберите Камень, ножницы или бумагу!", reply_markup=markup)
                bot.send_message(igrok2, "Подожди выбор первого пользователя!", reply_markup=markup1)
                bot.send_message(igrok3, "Подожди выбор первого пользователя!", reply_markup=markup1)
                bot.register_next_step_handler(send, kmn_vib_ig2_3)
            elif (shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok3}"] == kamen and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"] == noshik and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"] == shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"]) or (shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok3}"] == noshik and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"] == bumaga and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"] == shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"]) or (shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok3}"] == bumaga and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"] == kamen and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"] == shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"]):
                shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"] += 1
                bot.send_message(igrok3, f"Ты победил!\nТекущий счёт:\n{user1}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"]) + f"*\n{user2}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"]) + f"*\n{user3}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"]) + "*", parse_mode="Markdown")
                bot.send_message(igrok2, f"{user3} победил!\nТекущий счёт:\n{user1}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"]) + f"*\n{user2}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"]) + f"*\n{user3}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"]) + "*", parse_mode="Markdown")
                bot.send_message(igrok1, f"{user3} победил!\nТекущий счёт:\n{user1}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"]) + f"*\n{user2}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"]) + f"*\n{user3}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"]) + "*", parse_mode="Markdown")
                send = bot.send_message(igrok1, "Выберите Камень, ножницы или бумагу!", reply_markup=markup)
                bot.send_message(igrok2, "Подожди выбор первого пользователя!", reply_markup=markup1)
                bot.send_message(igrok3, "Подожди выбор первого пользователя!", reply_markup=markup1)
                bot.register_next_step_handler(send, kmn_vib_ig2_3)
            elif (shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"] == kamen and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"] == bumaga and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"] == shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok3}"]) or (shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"] == bumaga and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"] == noshik and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"] == shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok3}"]) or (shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"] == noshik and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"] == kamen and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"] == shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok3}"]):
                shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"] += 1
                shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"] += 1
                bot.send_message(igrok3, f"Ты и {user1} победили!\nТекущий счёт:\n{user1}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"]) + f"*\n{user2}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"]) + f"*\n{user3}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"]) + "*", parse_mode="Markdown")
                bot.send_message(igrok1, f"Ты и {user3} победили!\nТекущий счёт:\n{user1}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"]) + f"*\n{user2}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"]) + f"*\n{user3}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"]) + "*", parse_mode="Markdown")
                bot.send_message(igrok2, f"{user1} и {user3} победили!\nТекущий счёт:\n{user1}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"]) + f"*\n{user2}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"]) + f"*\n{user3}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"]) + "*", parse_mode="Markdown")
                send = bot.send_message(igrok1, "Выберите Камень, ножницы или бумагу!", reply_markup=markup)
                bot.send_message(igrok2, "Подожди выбор первого пользователя!", reply_markup=markup1)
                bot.send_message(igrok3, "Подожди выбор первого пользователя!", reply_markup=markup1)
                bot.register_next_step_handler(send, kmn_vib_ig2_3)
            elif (shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"] == kamen and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"] == bumaga and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"] == shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok3}"]) or (shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"] == bumaga and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"] == noshik and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"] == shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok3}"]) or (shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"] == noshik and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"] == kamen and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"] == shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok3}"]):
                shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"] += 1
                shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"] += 1
                bot.send_message(igrok2, f"Ты и {user1} победили!\nТекущий счёт:\n{user1}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"]) + f"*\n{user2}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"]) + f"*\n{user3}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"]) + "*", parse_mode="Markdown")
                bot.send_message(igrok1, f"Ты и {user2} победили!\nТекущий счёт:\n{user1}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"]) + f"*\n{user2}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"]) + f"*\n{user3}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"]) + "*", parse_mode="Markdown")
                bot.send_message(igrok3, f"{user1} и {user2} победили!\nТекущий счёт:\n{user1}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"]) + f"*\n{user2}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"]) + f"*\n{user3}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"]) + "*", parse_mode="Markdown")
                send = bot.send_message(igrok1, "Выберите Камень, ножницы или бумагу!", reply_markup=markup)
                bot.send_message(igrok2, "Подожди выбор первого пользователя!", reply_markup=markup1)
                bot.send_message(igrok3, "Подожди выбор первого пользователя!", reply_markup=markup1)
                bot.register_next_step_handler(send, kmn_vib_ig2_3)
            elif (shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok3}"] == kamen and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"] == bumaga and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"] == shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"]) or (shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok3}"] == bumaga and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"] == noshik and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"] == shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"]) or (shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok3}"] == noshik and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"] == kamen and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"] == shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"]):
                shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"] += 1
                shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"] += 1
                bot.send_message(igrok2, f"Ты и {user1} победили!\nТекущий счёт:\n{user1}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"]) + f"*\n{user2}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"]) + f"*\n{user3}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"]) + "*", parse_mode="Markdown")
                bot.send_message(igrok1, f"Ты и {user2} победили!\nТекущий счёт:\n{user1}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"]) + f"*\n{user2}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"]) + f"*\n{user3}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"]) + "*", parse_mode="Markdown")
                bot.send_message(igrok3, f"{user1} и {user2} победили!\nТекущий счёт:\n{user1}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"]) + f"*\n{user2}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"]) + f"*\n{user3}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"]) + "*", parse_mode="Markdown")
                send = bot.send_message(igrok1, "Выберите Камень, ножницы или бумагу!", reply_markup=markup)
                bot.send_message(igrok2, "Подожди выбор первого пользователя!", reply_markup=markup1)
                bot.send_message(igrok3, "Подожди выбор первого пользователя!", reply_markup=markup1)
                bot.register_next_step_handler(send, kmn_vib_ig2_3)
            elif (shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"] == kamen and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"] == bumaga and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok3}"] == noshik) or (shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"] == kamen and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"] == noshik and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok3}"] == bumaga) or (shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"] == noshik and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"] == kamen and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok3}"] == bumaga) or (shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"] == noshik and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"] == bumaga and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok3}"] == kamen) or (shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"] == bumaga and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"] == kamen and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok3}"] == noshik) or (shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok1}"] == bumaga and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok2}"] == noshik and shet[f"{igrok1}vs{igrok2}vs{igrok3}_zn{igrok3}"] == kamen):
                bot.send_message(igrok1, f"Разный выбор!\nТекущий счёт:\n{user1}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"]) + f"*\n{user2}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"]) + f"*\n{user3}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"]) + "*", parse_mode="Markdown")
                bot.send_message(igrok2, f"Разный выбор!\nТекущий счёт:\n{user1}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"]) + f"*\n{user2}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"]) + f"*\n{user3}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"]) + "*", parse_mode="Markdown")
                bot.send_message(igrok3, f"Разный выбор!\nТекущий счёт:\n{user1}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"]) + f"*\n{user2}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"]) + f"*\n{user3}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"]) + "*", parse_mode="Markdown")
                send = bot.send_message(igrok1, "Выберите Камень, ножницы или бумагу!", reply_markup=markup)
                bot.send_message(igrok2, "Подожди выбор первого пользователя!", reply_markup=markup1)
                bot.send_message(igrok3, "Подожди выбор первого пользователя!", reply_markup=markup1)
                bot.register_next_step_handler(send, kmn_vib_ig2_3)
        elif message.text == "/stop":
            bot.send_message(igrok3, f"Вы завершили игру!\nОбщий счёт:\n{user1}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"]) + f"*\n{user2}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"]) + f"*\n{user3}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"]) + "*", parse_mode="Markdown", reply_markup=markup2)
            bot.send_message(igrok1, f"{user3} завершил игру!\nОбщий счёт:\n{user1}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"]) + f"*\n{user2}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"]) + f"*\n{user3}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"]) + "*", parse_mode="Markdown", reply_markup=markup2)
            bot.send_message(igrok2, f"{user3} завершил игру!\nОбщий счёт:\n{user1}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok1}"]) + f"*\n{user2}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok2}"]) + f"*\n{user3}: *" + str(shet[f"{igrok1}vs{igrok2}vs{igrok3}_hod{igrok3}"]) + "*", parse_mode="Markdown", reply_markup=markup2)
    elif not message.text in bot_knb1:
        send = bot.send_message(igrok3, "Ой, не совсем тебя поняли! Нажми любую кнопку ниже!")
        bot.register_next_step_handler(send, kmn_vib_itog_3)

def kmn_konflikt(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but = types.KeyboardButton("/start")
    markup.add(but)
    markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but5 = types.KeyboardButton("Передать возможность второму игроку")
    markup1.add(but5)
    markup2 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton(kamen)
    but2 = types.KeyboardButton(noshik)
    but3 = types.KeyboardButton(bumaga)
    but4 = types.KeyboardButton(stop)
    markup2.add(but1, but2, but3).add(but4)
    if message.text in vib1:
        if message.text == "Отменить игру":
            bot.send_message(igrok1, "Я вас понял! Спасибо за использование игры!", reply_markup=markup)
            bot.send_message(igrok2, f"{user1} принял решение завершить игру! Спасибо за использование игры!", reply_markup=markup)
        elif message.text == "Пригласить другого пользователя":
            send = bot.send_message(igrok1, f"Введите Chat Id вашего друга или передайте эту возможность {user2}!", reply_markup=markup1)
            bot.send_message(igrok1, f"{user1} принял решение пригласить другого игрока! Подождите пока он кого-то пригласит!")
            bot.register_next_step_handler(send, kmn_peredacha)
        elif message.text == "Играть в двоем":
            shet[f"{igrok1}vs{igrok2}_hod{igrok1}"] = int(0)
            shet[f"{igrok1}vs{igrok2}_hod{igrok2}"] = int(0)
            send = bot.send_message(igrok1, "Окей! Выберите Камень. ножницы или бумагу!", reply_markup=markup2)
            bot.send_message(igrok2, f"{user1} принял решение сыграть только с вами! Подождите его выбор!")
            bot.register_next_step_handler(send, kmn_mp_vib_ig2)
    elif not message.text in vib1:
        send = bot.send_message(igrok1, "Ой, не совсем тебя поняли! Нажми любую кнопку ниже!")
        bot.register_next_step_handler(send, kmn_konflikt)

@bot.message_handler(commands=["beta_randomaizer"])
def randomaizer_vib(message):
    black_list = open("black_list.txt", "r", encoding="UTF-8")
    black_l = black_list.read()
    if not str(message.chat.id) in black_l:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        but1 = types.KeyboardButton(kmn_reshim[0])
        but2 = types.KeyboardButton(kmn_reshim[1])
        markup.add(but1, but2)
        global user1, polsovatel1
        user1 = message.from_user.first_name
        polsovatel1 = str(message.chat.id)
        send = bot.send_message(polsovatel1, "Привет, ты в Рандомайзере! Выбери режим работы!", reply_markup=markup)
        bot.register_next_step_handler(send, randomaizer)
    elif str(message.chat.id) in black_l:
        bot.send_message(message.chat.id, black_list_text)

def randomaizer(message):
    global spis
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but = types.KeyboardButton("/stop")
    markup.add(but)
    if message.text in kmn_reshim:
        if message.text == "Одиночный":
            random_dict[f"{message.chat.id}randomaizer_na_1"] = []
            send = bot.send_message(message.chat.id, "Введите предметы, а когда вы все напишите нажмите кнопку ниже!", reply_markup=markup)
            bot.register_next_step_handler(send, randomaizer1)
        elif message.text == "Сетевой":
            send = bot.send_message(polsovatel1, "Введите Chat Id вашего друга!", reply_markup=markup)
            bot.register_next_step_handler(send, randomaizer_mp)

def randomaizer1(message):
    markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton("Да!")
    but2 = types.KeyboardButton("Нет!")
    markup1.add(but1, but2)
    if message.content_type == "text" and message.text != "/stop":
        random_dict[f"{message.chat.id}randomaizer_na_1"].append(str(message.text))
        send = bot.send_message(message.chat.id, "Отлично! Можно ввести еще!")
        bot.register_next_step_handler(send, randomaizer1)
    elif message.text == "/stop":
        if len(random_dict[f"{message.chat.id}randomaizer_na_1"]) > 1:
            random_dict[f"{message.chat.id}randomaizer_na_1_bs"] = ", ".join(random_dict[f"{message.chat.id}randomaizer_na_1"])
            send = bot.send_message(message.chat.id, f"Окей! Проверь все ли верно:\n*" + str(random_dict[f"{message.chat.id}randomaizer_na_1_bs"]) + "*", reply_markup=markup1, parse_mode="Markdown")
            bot.register_next_step_handler(send, randomaizer_vp)
        elif len(random_dict[f"{message.chat.id}randomaizer_na_1"]) <= 1:
            send = bot.send_message(message.chat.id, "Извините, но в вашем списке очень мало объектов, из-за этого работа рандомайзера невозможна! Пожалуйста, добавьте еще элементов в список!")
            bot.register_next_step_handler(send, randomaizer1)

def randomaizer_vp(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but = types.KeyboardButton("Крутить")
    markup.add(but)
    markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton("/stop")
    markup1.add(but1)
    if message.text in slova:
        if message.text == "Да!":
            send = bot.send_message(message.chat.id, "Хорошо! Тогда нажми кнопку ниже!", reply_markup=markup)
            bot.register_next_step_handler(send, randomaizer2)
        elif message.text == "Нет!":
            random_dict[f"{message.chat.id}randomaizer_na_1"].clear()
            send = bot.send_message(message.chat.id, "Введи другие значения!", reply_markup=markup1)
            bot.register_next_step_handler(send, randomaizer1)
    elif not message.text in slova:
        send = bot.send_message(message.chat.id, "Ой!")
        bot.register_next_step_handler(send, randomaizer_vp)

def randomaizer2(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton("Крутить")
    but2 = types.KeyboardButton("Удалить")
    but3 = types.KeyboardButton("Завершить")
    markup.add(but1, but2).add(but3)
    if message.text == "Крутить":
        shifron = []
        while True:
            kluchi = choice(kluchi_shifron)
            shifron.append(kluchi)
            if len(shifron) == len(random_dict[f"{message.chat.id}randomaizer_na_1"]):
                kluchi_bez_skobok = ", ".join(shifron)
                print(f"Получен новый список от {message.chat.id}: {kluchi_bez_skobok}")
                break
        random_dict[f"{message.chat.id}randomaizer_itog"] = choice(random_dict[f"{message.chat.id}randomaizer_na_1"])
        send = bot.send_message(message.chat.id, f"Итог: *" + str(random_dict[f"{message.chat.id}randomaizer_itog"]) + "*\n\nВыберите действие с этим списком ниже!", parse_mode="Markdown", reply_markup=markup)
        bot.register_next_step_handler(send, randomaizer3)
        shifron.clear()
    elif message.text != "Крутить":
        send = bot.send_message(message.chat.id, "Ой")
        bot.register_next_step_handler(send, randomaizer2)

def randomaizer3(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton("Крутить")
    but2 = types.KeyboardButton("Удалить")
    but3 = types.KeyboardButton("Завершить")
    markup.add(but1, but2).add(but3)
    markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup1.add(but1, but3)
    markup2 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but = types.KeyboardButton("/start")
    markup2.add(but)
    if message.text in slo1:
        if message.text == "Удалить":
            random_dict[f"{message.chat.id}randomaizer_na_1"].remove(random_dict[f"{message.chat.id}randomaizer_itog"])
            if len(random_dict[f"{message.chat.id}randomaizer_na_1"]) != 0:
                send = bot.send_message(message.chat.id, "Элемент удален! Нажмите кнопку ниже!", reply_markup=markup1)
                bot.register_next_step_handler(send, randomaizer3)
            elif len(random_dict[f"{message.chat.id}randomaizer_na_1"]) == 0:
                bot.send_message(message.chat.id, "Элемент удален! На этом список закончился! Спасибо за использование!", reply_markup=markup2)
        elif message.text == "Крутить":
            random_dict[f"{message.chat.id}randomaizer_itog"] = choice(random_dict[f"{message.chat.id}randomaizer_na_1"])
            send = bot.send_message(message.chat.id, f"Итог: *" + str(random_dict[f"{message.chat.id}randomaizer_itog"]) + "*\n\nВыберите действие с этим списком ниже!", parse_mode="Markdown", reply_markup=markup)
            bot.register_next_step_handler(send, randomaizer3)
        elif message.text == "Завершить":
            random_dict[f"{message.chat.id}randomaizer_na_1"].clear()
            bot.send_message(message.chat.id, "Окей, завершаем использование! Спасибо за использование!", reply_markup=markup2)
    elif not message.text in slo1:
        send = bot.send_message(message.chat.id, "Ой")
        bot.register_next_step_handler(send, randomaizer3)

def randomaizer_mp(message):
    text2 = f"Попросите вашего друга зайти в бот и нажать кнопку /start, а потом повторите попытку, либо нажмите {stop} для прекращения приглашений друга!!\nОшибка повторяется? Ответ ищите [здесь](https://t.me/kontrol_chek185/1131)"
    text = "[здесь](https://t.me/kontrol_chek185/1131)"
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton("Да!")
    but2 = types.KeyboardButton("Нет!")
    markup.add(but1, but2)
    markup1 = types.ReplyKeyboardRemove()
    markup2 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but = types.KeyboardButton("/stop")
    markup2.add(but)
    markup3 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but3 = types.KeyboardButton("/start")
    markup3.add(but3)
    chat_global_file = open("chat.txt", "r")
    allText = chat_global_file.read()
    spis_chat_id = list(map(str, allText.split()))
    if message.text.isdigit():
        global polsovatel2
        polsovatel2 = str(message.text)
        if polsovatel1 != polsovatel2:
            if polsovatel2 in spis_chat_id:
                bot.send_message(polsovatel1, "Отправили твое приглашение! Ожидай ответа!", reply_markup=markup1)
                send = bot.send_message(polsovatel2, f"Вам пришло приглашение от пользователя {user1}! Вы принимаете его приглашение?", reply_markup=markup)
                bot.register_next_step_handler(send, randomaizer_mp_vibor_elem)
            elif not polsovatel2 in spis_chat_id:
                send = bot.send_message(polsovatel1, f"Пользователь не найден в базе данных бота! {text2}", parse_mode="Markdown")
                bot.register_next_step_handler(send, randomaizer_mp)
        elif polsovatel1 == polsovatel2:
            send = bot.send_message(polsovatel1, f"Извините самого себя пригласить нельзя! Попробуйте еще раз!\nЧто делать если возникает такая ошибка? Ищите {text}", parse_mode="Markdown")
            bot.register_next_step_handler(send, randomaizer_mp)
    elif not message.text.isdigit() and message.text != "/stop":
        send = bot.send_message(polsovatel1, "Вводите только цифры!", reply_markup=markup2)
        bot.register_next_step_handler(send, randomaizer_mp)
    elif not message.text.isdigit() and message.text == "/stop":
        bot.send_message(polsovatel1, "Принял! Нажми на одну из кнопок ниже!", reply_markup=markup3)
    chat_global_file.close()

def randomaizer_mp_vibor_elem(message):
    global user2
    user2 = message.from_user.first_name
    if message.text.title() in slova:
        if message.text.title() == "Да!":
            random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2"] = []
            send = bot.send_message(polsovatel1, f"{user2} принял приглашение! Начните вводить нужные вам или вашему другу значения!")
            bot.send_message(polsovatel2, f"Вы приняли приглашение! Подожди пока {user1} выберет нужные значения!")
            bot.register_next_step_handler(send, randomaizer_mp_vibor_elem_1)
        elif message.text.title() == "Нет!":
            bot.send_message(polsovatel1, f"{user2} отклонил приглашение!")
            bot.send_message(polsovatel2, "Вы отклонили приглашение!")
    elif not message.text.title() in slova:
        send = bot.send_message(polsovatel2, "Ой")
        bot.register_next_step_handler(send, randomaizer_mp_vibor_elem)

def randomaizer_mp_vibor_elem_1(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton("Да!")
    but2 = types.KeyboardButton("Нет!")
    markup.add(but1, but2)
    markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but = types.KeyboardButton("/stop")
    markup1.add(but)
    markup2 = types.ReplyKeyboardRemove()
    if message.content_type == "text" and not message.text in slova2:
        random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2"].append(str(message.text))
        send = bot.send_message(polsovatel1, "Добавил! Добавь еще!", reply_markup=markup1)
        bot.send_message(polsovatel2, "Один элемент добавлен! Добавляются еще!", reply_markup=markup2)
        bot.register_next_step_handler(send, randomaizer_mp_vibor_elem_1)
    elif message.text in slova2:
        if message.text == "Передать возможность добавить второму игроку нужное значение":
            bot.send_message(polsovatel1, f"Окей! Отправил {user2} такую возможность!", reply_markup=markup2)
            send = bot.send_message(polsovatel2, f"{user1} предоставил вам возможность добавить элементы в список! Введите в строку ниже нужные элементы!", reply_markup=markup1)
            bot.register_next_step_handler(send, randomaizer_mp_vibor_elem_2)
        elif message.text == slova2[2]:
            if len(random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2"]) > 1:
                random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2_bs"] = ", ".join(random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2"])
                send = bot.send_message(polsovatel1, f"Ваш с {user2} список выглядит вот так:\n*" + str(random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2_bs"]) + "*\n\nВы согласны использовать такой список?", reply_markup=markup, parse_mode="Markdown")
                bot.register_next_step_handler(send, randomaizer_mp_vibor1)
            elif len(random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2"]) <= 1:
                send = bot.send_message(polsovatel1, f"Извините, но в вашем с {polsovatel2} списке очень мало элементов, из-за этого работа рандомайзера невозможна! Пожалуйста, добавьте еще элементов в список!", reply_markup=markup, parse_mode="Markdown")
                bot.send_message(polsovatel2, f"Извините, но в вашем с {polsovatel1} оказалось очень мало элементов, из-за этого работа рандомайзера невозможна! {polsovatel1} уже добавляет элементы в ваш список!")
                bot.register_next_step_handler(send, randomaizer_mp_vibor1)

def randomaizer_mp_vibor_elem_2(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton("Да!")
    but2 = types.KeyboardButton("Нет!")
    markup.add(but1, but2)
    markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but = types.KeyboardButton("/stop")
    markup1.add(but)
    markup2 = types.ReplyKeyboardRemove()
    if message.content_type == "text" and not message.text in slova2:
        random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2"].append(str(message.text))
        send = bot.send_message(polsovatel2, "Добавил! Добавь еще!", reply_markup=markup1)
        bot.send_message(polsovatel1, "Один элемент добавлен! Добавляются еще!", reply_markup=markup2)
        bot.register_next_step_handler(send, randomaizer_mp_vibor_elem_2)
    elif message.text in slova2:
        if message.text == "Передать возможность добавить первому игроку нужное значение":
            bot.send_message(polsovatel2, f"Окей! Отправил {user1} такую возможность!", reply_markup=markup2)
            send = bot.send_message(polsovatel1, f"{user2} предоставил вам возможность добавить элементы в список! Введите в строку ниже нужные элементы!", reply_markup=markup1)
            bot.register_next_step_handler(send, randomaizer_mp_vibor_elem_1)
        elif message.text == slova2[2]:
            random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2_bs"] = ", ".join(random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2"])
            send = bot.send_message(polsovatel2, f"Ваш с {user1} список выглядит вот так:\n*" + str(random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2_bs"]) + "*\n\nВы согласны использовать такой список?", reply_markup=markup, parse_mode="Markdown")
            bot.register_next_step_handler(send, randomaizer_mp_vibor1_2)

def randomaizer_mp_vibor1(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton("Да!")
    but2 = types.KeyboardButton("Нет!")
    markup.add(but1, but2)
    markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but = types.KeyboardButton("/stop")
    markup1.add(but)
    markup2 = types.ReplyKeyboardRemove()
    if message.text in slova:
        if message.text == "Да!":
            random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2_bs"] = ", ".join(random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2"])
            bot.send_message(polsovatel1, f"Окей! Отправил вопрос {user2}. Ожидайте ответа!", reply_markup=markup2)
            send = bot.send_message(polsovatel2, f"Ваш с {user1} список выглядит вот так:\n*" + str(random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2_bs"]) + "*\n\nВы согласны использовать такой список?", reply_markup=markup, parse_mode='Markdown')
            bot.register_next_step_handler(send, randomaizer_mp_vibor2)
        if message.text == "Нет!":
            random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2"].clear()
            send = bot.send_message(polsovatel1, "Введите другие значения в список!", reply_markup=markup1)
            bot.send_message(polsovatel2, f"{user1} сбросил список и сейчас заполняет его заного! Подождите немного!", reply_markup=markup2)
            bot.register_next_step_handler(send, randomaizer_mp_vibor_elem_1)
    elif not message.text in slova:
        send = bot.send_message(polsovatel1, "Ой!")
        bot.register_next_step_handler(send, randomaizer_mp_vibor1)

def randomaizer_mp_vibor1_2(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton("Да!")
    but2 = types.KeyboardButton("Нет!")
    markup.add(but1, but2)
    markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but = types.KeyboardButton("/stop")
    markup1.add(but)
    markup2 = types.ReplyKeyboardRemove()
    if message.text in slova:
        if message.text == "Да!":
            random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2_bs"] = ", ".join(random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2"])
            bot.send_message(polsovatel2, f"Окей! Отправил вопрос {user1}. Ожидайте ответа!", reply_markup=markup2)
            send = bot.send_message(polsovatel1, f"Ваш с {user2} список выглядит вот так:\n*" + str(random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2_bs"]) + "*\n\nВы согласны использовать такой список?", reply_markup=markup, parse_mode="Markdown")
            bot.register_next_step_handler(send, randomaizer_mp_vibor2_2)
        if message.text == "Нет!":
            random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2"].clear()
            send = bot.send_message(polsovatel2, "Введите другие значения в список!", reply_markup=markup1)
            bot.send_message(polsovatel1, f"{user2} сбросил список и сейчас заполняет его заного! Подождите немного!")
            bot.register_next_step_handler(send, randomaizer_mp_vibor_elem_1)
    elif not message.text in slova:
        send = bot.send_message(polsovatel1, "Ой!")
        bot.register_next_step_handler(send, randomaizer_mp_vibor1_2)

def randomaizer_mp_vibor2(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton("Крутить")
    but2 = types.KeyboardButton("Завершить")
    markup.add(but1, but2)
    markup1 = types.ReplyKeyboardRemove()
    markup2 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but = types.KeyboardButton("/stop")
    markup2.add(but)
    if message.text in slova:
        if message.text == "Да!":
            shifron_mp = []
            while True:
                kluchi = choice(kluchi_shifron)
                shifron_mp.append(kluchi)
                if len(shifron_mp) == len(random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2"]):
                    kluchi_bez_skobok = ", ".join(shifron_mp)
                    print(f"Получен новый список от {polsovatel1} и {polsovatel2}: {kluchi_bez_skobok}")
                    break
            send = bot.send_message(polsovatel1, f"Окей, принял! Нажми кнопку ниже!", reply_markup=markup)
            bot.send_message(polsovatel2, f"Приняли! Ждем выбора {user1}", reply_markup=markup1)
            bot.register_next_step_handler(send, randomaizer_mp_random)
            shifron_mp.clear()
        if message.text == "Нет!":
            random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2"].clear()
            send = bot.send_message(polsovatel2, "Введите другие значения в список!", reply_markup=markup2)
            bot.send_message(polsovatel1, f"{user2} сбросил список и сейчас заполняет его заного! Подождите немного!", reply_markup=markup1)
            bot.register_next_step_handler(send, randomaizer_mp_vibor_elem_2)
    elif not message.text in slova:
        send = bot.send_message(polsovatel1, "Ой!")
        bot.register_next_step_handler(send, randomaizer_mp_vibor2)

def randomaizer_mp_vibor2_2(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton("Крутить")
    but2 = types.KeyboardButton("Завершить")
    markup.add(but1, but2)
    markup1 = types.ReplyKeyboardRemove()
    markup2 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but = types.KeyboardButton("/stop")
    markup2.add(but)
    if message.text in slova:
        if message.text == "Да!":
            shifron_mp = []
            while True:
                kluchi = choice(kluchi_shifron)
                shifron_mp.append(kluchi)
                if len(shifron_mp) == len(random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2"]):
                    kluchi_bez_skobok = ", ".join(shifron_mp)
                    print(f"Получен новый список от {polsovatel1} и {polsovatel2}: {kluchi_bez_skobok}")
                    break
            bot.send_message(polsovatel2, f"Окей! Ждем пользователя {user1}!", reply_markup=markup1)
            send = bot.send_message(polsovatel1, f"{user2} принял список! Нажми кнопку ниже!", reply_markup=markup)
            bot.register_next_step_handler(send, randomaizer_mp_random)
            shifron_mp.clear()
        if message.text == "Нет!":
            random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2"].clear()
            send = bot.send_message(polsovatel2, "Введите другие значения в список!", reply_markup=markup2)
            bot.send_message(polsovatel1, f"{user2} сбросил список и сейчас заполняет его заного! Подождите немного!", reply_markup=markup1)
            bot.register_next_step_handler(send, randomaizer_mp_vibor_elem_1)
    elif not message.text in slova:
        send = bot.send_message(polsovatel1, "Ой!")
        bot.register_next_step_handler(send, randomaizer_mp_vibor2)

def randomaizer_mp_random(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton("Крутить")
    but2 = types.KeyboardButton("Удалить")
    but3 = types.KeyboardButton("Завершить")
    markup.add(but1, but2).add(but3)
    markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but = types.KeyboardButton("/start")
    markup1.add(but)
    if message.text in slo1_1:
        if message.text == "Крутить":
            random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2_itog"] = choice(random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2"])
            send = bot.send_message(polsovatel1, f"Итог: *" + str(random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2_itog"]) + "*\n\nВыберите действие ниже!", parse_mode="Markdown", reply_markup=markup)
            bot.send_message(polsovatel2, f"Итог: *" + str(random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2_itog"]) + f"*\n\nПодождите действие {user1}!", parse_mode="Markdown")
            bot.register_next_step_handler(send, randomaizer_mp_random_vib)
        elif message.text == "Завершить":
            random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2"].clear()
            bot.send_message(polsovatel1, "Окей! Завершаем использование сервисом! Спасибо за использование!", reply_markup=markup1)
            bot.send_message(polsovatel2, f"{user1} принял решение завершить работу с рандомайзером! Спасибо за использование!", reply_markup=markup1)
    elif not message.text in slo1_1:
        send = bot.send_message(polsovatel1, "Ой")
        bot.register_next_step_handler(send, randomaizer_mp_random)

def randomaizer_mp_random_vib(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but1 = types.KeyboardButton("Крутить")
    but2 = types.KeyboardButton("Завершить")
    markup.add(but1, but2)
    markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but = types.KeyboardButton("/start")
    markup1.add(but)
    markup2 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but3 = types.KeyboardButton("Крутить")
    but4 = types.KeyboardButton("Удалить")
    but5 = types.KeyboardButton("Завершить")
    markup2.add(but3, but4).add(but5)
    if message.text in slo1:
        if message.text == "Удалить":
            random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2"].remove(random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2_itog"])
            if len(random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2"]) != 0:
                send = bot.send_message(polsovatel1, "Данный элемент удален! Нажмите кнопку ниже!", reply_markup=markup)
                bot.send_message(polsovatel2, f"{user1} удалил из списка *" + str(random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2_itog"]) + "*! Ждем его действие!", parse_mode="Markdown")
                bot.register_next_step_handler(send, randomaizer_mp_random)
            elif len(random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2"]) == 0:
                bot.send_message(polsovatel1, "Данный элемент удален, а список весь закончился! Спасибо за уделенное время!", reply_markup=markup1)
                bot.send_message(polsovatel2, "Последний элемент в списке удален, и на сегодня работа закончена! Спасибо за уделенное время!", reply_markup=markup1)
        elif message.text == "Крутить":
            random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2_itog"] = choice(random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2"])
            send = bot.send_message(polsovatel1, f"Итог: *" + str(random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2_itog"]) + "*\n\nВыберите действие ниже!", parse_mode="Markdown", reply_markup=markup2)
            bot.send_message(polsovatel2, f"Итог: *" + str(random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2_itog"]) + f"*\n\nПодождите действие {user1}!", parse_mode="Markdown")
            bot.register_next_step_handler(send, randomaizer_mp_random_vib)
        elif message.text == "Завершить":
            random_dict[f"{polsovatel1}and{polsovatel2}randomaizer_na_2"].clear()
            bot.send_message(polsovatel1, "Окей! Завершаем использование сервисом! Спасибо за использование!", reply_markup=markup1)
            bot.send_message(polsovatel2, f"{user1} принял решение завершить работу с рандомайзером! Спасибо за использование!", reply_markup=markup1)
    elif not message.text in slo1:
        send = bot.send_message(polsovatel1, "Ой!")
        bot.register_next_step_handler(send, randomaizer_mp_random_vib)

@bot.message_handler(content_types=['text'])
def ne(message):
    markup3 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    but5 = "/start"
    markup3.add(but5)
    bot.send_message(message.chat.id, "Ой, не совсем тебя понял! Нажми кнопку ниже!", reply_markup=markup3)

bot.polling(none_stop=True, interval=0)
